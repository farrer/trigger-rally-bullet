In this file I'll (farrer) keep track of the changes for configurations,
vehicles or track files needed for the the Bullet Physics Trigger Rally.

Definitive Changes:
   - Defined a new action map for brake, instead of the previous way of using 
     the 'back action' sometimes to go backward, sometimes to brake. The back 
     action will now only do backward input and will only start to be 
     effective when the car is stopped (in fact, when is almost stopped, where 
     speed <= 0.5km/h);

   - About drifts: They could be achieved with two ways:
     \
      Automatic: set a threshold < 4.0 at drift vehicle parameter section. 
      Manual: While turning, activate briefly the hand brake and control
              the vehicle with wheels steering (and eventually normal brake).
              The more potent is the handbrake, the more the drift effect
              will be. For me it's the most please way to do drifts,
              although very different from the original Trigger physics way.
              This is why I defined also an automatic way to set drifts too,
              in the hope of being somewhat compatible with the old way
              (must check constants for better automatic drift thought).

   - Vehicle's file now have the following changes:

     At <pstats>, wheeldrive is now effective. It's used to define
     which wheel will receive engine's torque (FWD: only front wheels; 
     RWD: only rear wheels; 4WD: all 4 whells).
     \
      removed weightkg definition. It's now defined by the mass definition on
      <genparams>.

     The section <genparams> is now defined as:
     <genparams mass="value" steering="value" wheelmodel="value" />
     \
      mass: is now effective and should be defined in Kg (usually is).
     \
      steering: define the max angle, in radians, that steering wheels 
            should have.
     \
      There's no more wheelscale parameter inside this section. The scale
            should be defined for each wheel. Also, dimension is no more used,
            as it's now dynamic calculated by the body's 3d model.

     Removed section <ctrlparams>.

     Each <wheel> should be defined with exact ordering, front-right,
     front-left, rear-right, rear-left, and have only the following parameters:
       <wheel friction="value" rollinfluence="value" scale="value" 
              pos="x, y, z" />
       \
        scale: is the total scale of the wheel. To convert from old
             definitions, calculate the value by the old wheelscale * radius.
        pos: wheel position. Note that values for height (z) now define the
             height where the wheel connect to the chassis, in meters, and 
             should be different than the old ones (which was relative and in
             rendering units).
        friction: The coefficient of friction between the tyre and the ground.
             Should be about 0.8 for realistic cars, but can increased for 
             better handling.
        rollinfluence: Reduces the rolling torque applied from the wheels that 
             cause the vehicle to roll over. This is a bit of a hack, but it's 
             quite effective. 0.0 = no roll, 1.0 = physical behaviour.
             If wheel friction is too high, you'll need to reduce this to stop
             the vehicle rolling over.

     Added <brake> definition (as a child of vehicle), with the following:
       <brake normal="value" handbrake="value"> 
          The normal brake is effective on the wheels which receive engine's
          transmisson power. Handbrake will affect rear wheels. Usually, 
          handbrake values should be greater than normal brake ones.
          Note: Handbrake could be used to drift on turns.
          Default: normal=20, handbrake=80.

     Added <suspension> definition (as a child of vehicle), with:
        <suspension stiffness="value" compressionk="value"
                    relaxationk="value" restlength="value"
                    maxtravel="value"/>
        \
         stiffness: reference values: 10.0 - Offroad buggy, 50.0 - Sports car, 
                    200.0 - F1 Car. Default: 35
         compressionk: constant to calculate the damping coefficient for when
                    suspension is compressed. Values from 0.1 to 0.3 are
                    good values. Default: 0.3
         relaxationk: constant to calculate the damping coefficient for when
                    suspension is expanding. Sould be slightly larger than
                    compressionk, eg: 0.2 to 0.5. Default: 0.5
         restlength: The maximum length of the suspension (metres). 
                    Default: 0.7
         maxtravel: The maximum distance the suspension can be compressed 
                    (centimetres). Default: 500

     Added <drift> definition (as a child of vehicle), with:
        <dirft threshold="value" torquelevel="value"/>
        \
         threshold: wheels total skid where the vehicle should be drift. 
                    Range: 4.0 (never) to 0.0 (always). The value is relative 
                    to the wheel's slidding, 4 meaning that all wheels full
                    slidding. Default: 4.0 (disabled)
         torquelevel: Torque level to apply when threshold was met. 
                    Default: 1.0

Current Changes (will need to revert them or do some work to be definitive):
   - Circuits with negative positions won't work, as I only defined the
     physical mesh to be positive and without overlaping a :1 map definition;
   - For the same reason, the car will fall under rendered terrain on 
     positions negative or greater than the defined for the terrain size;
   - With the port of the DrivingSystemInstance to work with the values from
     Bullet instead of the wrong ones from previous physics implementation, 
     probably the cars engine will act somewhat different. I've tested only
     with Cordo KitCar (and it's acting like a KitCar, rarely going near
     100-120km/h). Will check latter the other ones;

Currently Broken (will probably fix them) or TODOs :
   - Dust trails is broken. Must check;
   - Must test sound effects.
   - Sometimes at higher velocities is too easy to loss car control;
   - Different friction values for terrains (use bullet's submeshes?);
   - TODO: should check the terrain's friction.
   - TODO: Must recheck all default values to more suitable values when
           fully implement vehicle behaviour.
   - FIX: all cars besides cordokitcar are broken, due to wheel Z position.

